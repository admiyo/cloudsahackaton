---
# tasks file for jritenour.vmware-cf-miq
 - name: Generate UUID
   shell: openssl rand -hex 2
   register: uuid_list
 - name: Debugging instance info
   debug:
     var: uuid_list.stdout
 - name: Authenticate to RHV-M
   ovirt_auth:
     url: "https://{{ rhvm_addr }}/ovirt-engine/api"
     username: "{{ rhv_user }}"
     password: "{{ rhv_pass }}" 
     insecure: true

 - name: create the VM
   ovirt_vms: 
     auth: "{{ ovirt_auth }}"
     state: running
     name: "{{ vm_name }}-{{ uuid_list.stdout }}"
     cluster: "{{ cluster }}"
     memory: 16GiB
     cpu_sockets: 2
     wait: True
     template: "{{ template_name }}"
     nics:
       - name: nic1
         profile_name: "{{ network_name }}"
         inferface: virtio 
     cloud_init:
       host_name: "{{ vm_name }}-{{ uuid_list.stdout }}"
       dns_servers: "{{ dns }}"
       custom_script: |
         runcmd:
          - systemctl stop firewalld
          - systemctl disable firewalld
#         write_files:
#          - content: |
#              DEVICE=eth0
#              IPADDR="{{ ipaddr }}"
#              NETMASK="{{ netmask }}"
#              ONBOOT=yes
#              TYPE=Ethernet
#              USERCTL=no
#              NM_CONTROLLED=no
#              GATEWAY="{{ gateway }}"
#              DNS1="{{ dns }}"
#              DOMAIN="home.lab"
#            path: /etc/sysconfig/network-scripts/ifcfg-eth0

 - name: create the DB disk
   ovirt_disks: 
     auth: "{{ ovirt_auth }}"
     name: "{{ vm_name }}-{{ uuid_list.stdout }}-disk2"
     interface: virtio_scsi
     vm_name: "{{ vm_name }}-{{ uuid_list.stdout }}"
     size: "{{ db_size }}GiB"
     format: cow
     storage_domain: "{{ datastore }}" 

 - name: Get VMs from datacenter X
   ovirt_vms_facts:
     fetch_nested: true
     pattern: name={{ vm_name }}-{{ uuid_list.stdout }} and datacenter=RDU-RHS
     auth: "{{ovirt_auth }}"
 - debug:
     msg: "my list {{ ovirt_vms | map(attribute='fqdn') | list }}"
 
 - set_fact:
     when: master
     masterip: "{{ ovirt_vms | map(attribute='fqdn') | list }}"

 - set_fact:
     when: node
     nodeip: "{{ ovirt_vms | map(attribute='fqdn') | list }}"
 
 - debug:
     var:  masterip

 - ovirt_vms_facts:
     auth: "{{ ovirt_auth }}"
     pattern: name=ocp-master* 
 - debug:
     var: ovirt_vms     

 - name: add master server to inventory
   add_host:
     hostname: "{{ masterip[0] }}"
     ansible_ssh_user: root
     ansible_ssh_pass: "{{ cf_ssh_pass }}"
     uuidmaster: "{{ uuid_list.stdout }}"
     groupname: master
   when: master

 - name: add nodes to inventory
   add_host:
     hostname: "{{ nodeip[0] }}"
     ansible_ssh_user: root
     ansible_ssh_pass: "{{ cf_ssh_pass }}"
     groupname: node
   when: node
